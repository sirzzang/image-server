server {
    listen 8888;
    listen [::]:8888;
    client_max_body_size 1G;

    # TODO: cgi script config 분리 및 정리
    location /scripts { # /scripts 경로 안의 파일 모두 실행 권한(x) 있어야 함
        root /home/eraser/nginx; # 설정하지 않으면, default html

        # fastcgi params
        include /home/eraser/nginx/conf/fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

        # fcgiwrap: FastCGI를 이용해 CGI 어플리케이션을 기동하는 간단한 서버
        fastcgi_pass unix:/var/run/fcgiwrap.socket;
    }

    # 이미지 단건 upload
    location /upload {

        # 업로드 모듈 내부 hashing 알고리즘을 통해 파일명 변경, 디렉토리 레벨 분리 가능
        # TODO: 하위 디렉토리 해시 레벨 shell script 단에서 저장 필요
        upload_store /home/eraser/nginx/images 2 2 2;

        upload_set_form_field file_name "$upload_file_name";
        upload_set_form_field content_type "$upload_content_type";
        upload_set_form_field path "$upload_tmp_path";

        # TODO: 에러 코드별 cleanup 확인
        upload_cleanup 400-404 500-505;

        # 업로드 후 요청에 대한 응답 처리
        upload_pass /scripts/upload.py;
    }

    location /upload_many {

        upload_store /home/eraser/nginx/images 2 2 2;
        
        upload_set_form_field $upload_field_name "$upload_file_name";
        upload_set_form_field $upload_field_name "$upload_content_type";
        upload_set_form_field $upload_field_name "$upload_tmp_path";

        # TODO: 에러 코드별 cleanup 확인
        upload_cleanup 200 400-404 500-505;

        # 업로드 후 요청에 대한 응답 처리
        upload_pass /scripts/upload_many.py;

    }
}
