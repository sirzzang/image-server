user  eraser;
worker_processes  1;

error_log  logs/error.log debug;
# #error_log  logs/error.log  notice;
# #error_log  logs/error.log  info;

# # pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {

    # basic settings
    include mime.types;
    sendfile on;
    keepalive_timeout 65;
    client_max_body_size 1G;

    # server {
    #     listen 8888;
    #     listen[::]:8888;
        
    #     location / {
    #         root pages;
    #         index index.html, index.htm;
    #     }

    #     error_page  404              /404.html;

    #     error_page   500 502 503 504  /50x.html;
    # }

    # cgi scripts
    
    include /home/eraser/nginx/conf.d/http.conf;
}

# http {
#     include       mime.types;
#     default_type  application/octet-stream;



#     #access_log  logs/access.log  main;

#     sendfile        on;
#     #tcp_nopush     on;

#     #keepalive_timeout  0;
#     keepalive_timeout  65;

#     #gzip  on;

#     server {
#         listen       8888;
#         server_name  localhost;
#         client_max_body_size 5G;

#         #charset koi8-r;

#         #access_log  logs/host.access.log  main;

#         location / {
#             root   html;
#             index  index.html index.htm;
#         }

#         #error_page  404              /404.html;

#         # redirect server error pages to the static page /50x.html
#         #
#         error_page   500 502 503 504  /50x.html;
#         location = /50x.html {
#             root   html;
#         }

#         # Upload form should be submitted to this location
#         location /upload {

#             # After upload, pass altered request body to this django view
#             upload_pass   /;

#             # Store files to this directory
#             # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
#             # https://stackoverflow.com/questions/27136433/nginx-upload-module-failed-to-create-output-file
#             upload_store /images;        
#             upload_store_access user:rw group:rw all:rw;

#             # Set specified fields in request body
#             upload_set_form_field $upload_field_name.name "$upload_file_name";
#             upload_set_form_field $upload_field_name.content_type "$upload_content_type";
#             upload_set_form_field $upload_field_name.path "$upload_tmp_path";

#             # Inform backend about hash and size of a file
#             upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
#             upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

#             # Here is where you define additional fields to pass through to upload_complete
#             upload_pass_form_field "^submit$|^description$";
#             upload_pass_form_field "^name$";
#             upload_pass_form_field "^terminal$";
#             upload_cleanup 400-599;
#         }
    

#         # proxy the PHP scripts to Apache listening on 127.0.0.1:80
#         #
#         #location ~ \.php$ {
#         #    proxy_pass   http://127.0.0.1;
#         #}

#         # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
#         #
#         #location ~ \.php$ {
#         #    root           html;
#         #    fastcgi_pass   127.0.0.1:9000;
#         #    fastcgi_index  index.php;
#         #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
#         #    include        fastcgi_params;
#         #}

#         # deny access to .htaccess files, if Apache's document root
#         # concurs with nginx's one
#         #
#         #location ~ /\.ht {
#         #    deny  all;
#         #}
#     }


#     # another virtual host using mix of IP-, name-, and port-based configuration
#     #
#     #server {
#     #    listen       8000;
#     #    listen       somename:8080;
#     #    server_name  somename  alias  another.alias;

#     #    location / {
#     #        root   html;
#     #        index  index.html index.htm;
#     #    }
#     #}


#     # HTTPS server
#     #
#     #server {
#     #    listen       443 ssl;
#     #    server_name  localhost;

#     #    ssl_certificate      cert.pem;
#     #    ssl_certificate_key  cert.key;

#     #    ssl_session_cache    shared:SSL:1m;
#     #    ssl_session_timeout  5m;

#     #    ssl_ciphers  HIGH:!aNULL:!MD5;
#     #    ssl_prefer_server_ciphers  on;

#     #    location / {
#     #        root   html;
#     #        index  index.html index.htm;
#     #    }
#     #}

# }
